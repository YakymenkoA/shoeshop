openapi: 3.0.1
info:
  title: ShoesShop
  version: '1.0'
paths:
  /api/Auth/register:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthDTO'
      responses:
        '200':
          description: OK
  /api/Auth/confirm-email:
    post:
      tags:
        - Auth
      parameters:
        - name: token
          in: query
          schema:
            type: string
        - name: email
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/Auth/login:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthDTO'
      responses:
        '200':
          description: OK
  /api/Brands/Create:
    post:
      tags:
        - Brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandCreateDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/BrandCreateDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BrandCreateDTO'
      responses:
        '200':
          description: OK
  /api/Brands/Get:
    get:
      tags:
        - Brands
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrandGetDTO'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrandGetDTO'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrandGetDTO'
  '/api/Brands/Get/{id}':
    get:
      tags:
        - Brands
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BrandGetDTO'
            application/json:
              schema:
                $ref: '#/components/schemas/BrandGetDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/BrandGetDTO'
  '/api/Brands/Update/{id}':
    put:
      tags:
        - Brands
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandCreateDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/BrandCreateDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BrandCreateDTO'
      responses:
        '200':
          description: OK
  '/api/Brands/Delete/{id}':
    delete:
      tags:
        - Brands
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/CartItems:
    get:
      tags:
        - CartItems
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItemGetDTO'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItemGetDTO'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItemGetDTO'
    post:
      tags:
        - CartItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemCreateDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CartItemCreateDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CartItemCreateDTO'
      responses:
        '200':
          description: OK
  '/api/CartItems/{id}':
    get:
      tags:
        - CartItems
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartItem'
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
            text/json:
              schema:
                $ref: '#/components/schemas/CartItem'
    delete:
      tags:
        - CartItems
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/CartItems/update:
    put:
      tags:
        - CartItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemUpdateDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CartItemUpdateDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CartItemUpdateDTO'
      responses:
        '200':
          description: OK
  /api/CartItems/quantity:
    get:
      tags:
        - CartItems
      responses:
        '200':
          description: OK
  /api/Categories/Create:
    post:
      tags:
        - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CategoryCreateDTO'
      responses:
        '200':
          description: OK
  /api/Categories/Get:
    get:
      tags:
        - Categories
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryGetDTO'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryGetDTO'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryGetDTO'
  '/api/Categories/{id}':
    get:
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  '/api/Categories/Update/{id}':
    put:
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CategoryCreateDTO'
      responses:
        '200':
          description: OK
  '/api/Categories/Delete/{id}':
    delete:
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/OrderItems:
    post:
      tags:
        - OrderItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemCreateDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderItemCreateDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderItemCreateDTO'
      responses:
        '200':
          description: OK
  '/api/OrderItems/{orderId}':
    get:
      tags:
        - OrderItems
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItemGetDTO'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItemGetDTO'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItemGetDTO'
  '/api/OrderItems/{id}':
    put:
      tags:
        - OrderItems
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              format: int32
          text/json:
            schema:
              type: integer
              format: int32
          application/*+json:
            schema:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
    delete:
      tags:
        - OrderItems
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/Orders:
    post:
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderCreateDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderCreateDTO'
      responses:
        '200':
          description: OK
  /api/Orders/userorders:
    get:
      tags:
        - Orders
      responses:
        '200':
          description: OK
  '/api/Orders/{id}':
    get:
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/Products:
    get:
      tags:
        - Products
      responses:
        '200':
          description: OK
    post:
      tags:
        - Products
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ProductName:
                  type: string
                Price:
                  type: number
                  format: double
                Description:
                  type: string
                CategoryId:
                  type: integer
                  format: int32
                BrandId:
                  type: integer
                  format: int32
                Discount:
                  type: integer
                  format: int32
                Rating:
                  type: number
                  format: double
                PhotoFile:
                  type: string
                  format: binary
            encoding:
              ProductName:
                style: form
              Price:
                style: form
              Description:
                style: form
              CategoryId:
                style: form
              BrandId:
                style: form
              Discount:
                style: form
              Rating:
                style: form
              PhotoFile:
                style: form
      responses:
        '200':
          description: OK
  '/api/Products/{id}':
    get:
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductGetDTO'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGetDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductGetDTO'
  /api/Reviews:
    post:
      tags:
        - Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreateDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/ReviewCreateDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReviewCreateDTO'
      responses:
        '200':
          description: OK
    get:
      tags:
        - Reviews
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReviewGetDTOPaginatedList'
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewGetDTOPaginatedList'
            text/json:
              schema:
                $ref: '#/components/schemas/ReviewGetDTOPaginatedList'
  '/api/Reviews/{id}':
    get:
      tags:
        - Reviews
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReviewGetDTO'
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewGetDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ReviewGetDTO'
    put:
      tags:
        - Reviews
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpdateDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/ReviewUpdateDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReviewUpdateDTO'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Reviews
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  '/api/Reviews/byProduct/{productId}':
    get:
      tags:
        - Reviews
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewGetDTO'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewGetDTO'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewGetDTO'
  /api/User/userinfo:
    get:
      tags:
        - User
      responses:
        '200':
          description: OK
  /api/User/updateinfo:
    put:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: OK
  /api/User/checkrole:
    get:
      tags:
        - User
      responses:
        '200':
          description: OK
  /api/User/updatepass:
    put:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/PasswordDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PasswordDTO'
      responses:
        '200':
          description: OK
components:
  schemas:
    ApplicationUser:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        normalizedUserName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        normalizedEmail:
          type: string
          nullable: true
        emailConfirmed:
          type: boolean
        passwordHash:
          type: string
          nullable: true
        securityStamp:
          type: string
          nullable: true
        concurrencyStamp:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneNumberConfirmed:
          type: boolean
        twoFactorEnabled:
          type: boolean
        lockoutEnd:
          type: string
          format: date-time
          nullable: true
        lockoutEnabled:
          type: boolean
        accessFailedCount:
          type: integer
          format: int32
        photo:
          type: string
          nullable: true
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
          nullable: true
        promocodes:
          type: array
          items:
            $ref: '#/components/schemas/Promocode'
          nullable: true
      additionalProperties: false
    AuthDTO:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    Brand:
      required:
        - brandName
      type: object
      properties:
        id:
          type: integer
          format: int32
        brandName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          nullable: true
      additionalProperties: false
    BrandCreateDTO:
      type: object
      properties:
        brandName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    BrandGetDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        brandName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    CartItem:
      required:
        - userId
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
        shoeSize:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/ApplicationUser'
        product:
          $ref: '#/components/schemas/Product'
      additionalProperties: false
    CartItemCreateDTO:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
        shoeSize:
          type: string
          nullable: true
      additionalProperties: false
    CartItemGetDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        photo:
          type: string
          nullable: true
        brandName:
          type: string
          nullable: true
        categoryName:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
        rating:
          type: number
          format: double
        isChecked:
          type: boolean
        shoeSize:
          type: string
          nullable: true
      additionalProperties: false
    CartItemToOrderDTO:
      type: object
      properties:
        cartItemId:
          type: integer
          format: int32
        productId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
      additionalProperties: false
    CartItemUpdateDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
        shoeSize:
          type: string
          nullable: true
      additionalProperties: false
    Category:
      required:
        - categoryName
      type: object
      properties:
        id:
          type: integer
          format: int32
        categoryName:
          type: string
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          nullable: true
      additionalProperties: false
    CategoryCreateDTO:
      type: object
      properties:
        categoryName:
          type: string
          nullable: true
      additionalProperties: false
    CategoryGetDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        categoryName:
          type: string
          nullable: true
      additionalProperties: false
    Order:
      required:
        - userId
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
        orderDate:
          type: string
          format: date-time
        totalPrice:
          type: number
          format: double
        status:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/ApplicationUser'
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          nullable: true
      additionalProperties: false
    OrderCreateDTO:
      type: object
      properties:
        totalPrice:
          type: number
          format: double
        promoCode:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItemToOrderDTO'
          nullable: true
      additionalProperties: false
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        productId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        orderId:
          type: integer
          format: int32
        price:
          type: number
          format: double
        shoeSize:
          type: string
          nullable: true
        order:
          $ref: '#/components/schemas/Order'
        product:
          $ref: '#/components/schemas/Product'
      additionalProperties: false
    OrderItemCreateDTO:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        orderId:
          type: integer
          format: int32
      additionalProperties: false
    OrderItemGetDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        photo:
          type: string
          nullable: true
        rating:
          type: number
          format: double
        price:
          type: number
          format: double
        shoeSize:
          type: string
          nullable: true
        categoryName:
          type: string
          nullable: true
        brandName:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        orderId:
          type: integer
          format: int32
      additionalProperties: false
    PasswordDTO:
      type: object
      properties:
        password:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
      additionalProperties: false
    Product:
      required:
        - productName
      type: object
      properties:
        id:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        price:
          type: number
          format: double
        description:
          type: string
          nullable: true
        categoryId:
          type: integer
          format: int32
        brandId:
          type: integer
          format: int32
        discount:
          type: integer
          format: int32
        photo:
          type: string
          nullable: true
        rating:
          type: number
          format: double
        category:
          $ref: '#/components/schemas/Category'
        brand:
          $ref: '#/components/schemas/Brand'
        cartItems:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          nullable: true
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          nullable: true
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          nullable: true
      additionalProperties: false
    ProductGetDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        price:
          type: number
          format: double
        description:
          type: string
          nullable: true
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
          nullable: true
        brandId:
          type: integer
          format: int32
        brandName:
          type: string
          nullable: true
        discount:
          type: integer
          format: int32
        photoSource:
          type: string
          nullable: true
        photo:
          type: string
          nullable: true
        rating:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
      additionalProperties: false
    Promocode:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        discount:
          type: integer
          format: int32
        amountOfUses:
          type: integer
          format: int32
        users:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUser'
          nullable: true
      additionalProperties: false
    Review:
      required:
        - userId
      type: object
      properties:
        id:
          type: integer
          format: int32
        createDate:
          type: string
          format: date-time
        userId:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        comment:
          type: string
          nullable: true
        product:
          $ref: '#/components/schemas/Product'
        user:
          $ref: '#/components/schemas/ApplicationUser'
      additionalProperties: false
    ReviewCreateDTO:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        rating:
          maximum: 5
          minimum: 1
          type: integer
          format: int32
        comment:
          type: string
          nullable: true
      additionalProperties: false
    ReviewGetDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        createDate:
          type: string
          format: date-time
        userId:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        photo:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
        comment:
          type: string
          nullable: true
      additionalProperties: false
    ReviewGetDTOPaginatedList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ReviewGetDTO'
          nullable: true
        totalCount:
          type: integer
          format: int32
      additionalProperties: false
    ReviewUpdateDTO:
      type: object
      properties:
        rating:
          maximum: 5
          minimum: 1
          type: integer
          format: int32
        comment:
          type: string
          nullable: true
      additionalProperties: false
    UserDTO:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        photo:
          type: string
          nullable: true
        roles:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false